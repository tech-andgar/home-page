<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Package on TECH-ANDGAR</title><link>https://tech-andgar.me/es/series/package/</link><description>Recent content in Package on TECH-ANDGAR</description><generator>Hugo</generator><language>es</language><lastBuildDate>Sat, 17 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://tech-andgar.me/es/series/package/index.xml" rel="self" type="application/rss+xml"/><item><title>Manejo de Errores en Dart: ¿Deberías Usar `try/catch`, Valores de Retorno o Enfoques Funcionales?</title><link>https://tech-andgar.me/es/posts/dart-try-catch-vs-records-values-vs-functional-approaches-for-error-handling/</link><pubDate>Sat, 17 Aug 2024 00:00:00 +0000</pubDate><guid>https://tech-andgar.me/es/posts/dart-try-catch-vs-records-values-vs-functional-approaches-for-error-handling/</guid><description>Manejo de Errores en Dart: ¿Deberías Usar try/catch, Valores de Retorno o Enfoques Funcionales? Link to heading Resumen Link to heading Este artículo explora las diferentes estrategias para el manejo de errores en Dart, comparando el enfoque tradicional de try/catch con métodos más modernos como el uso de valores de retorno, clases personalizadas y enfoques funcionales utilizando paquetes como dartz y fpdart. Aprenderás cuándo y por qué usar cada enfoque, con ejemplos prácticos y consideraciones de rendimiento.</description></item></channel></rss>